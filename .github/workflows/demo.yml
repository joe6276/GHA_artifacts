name: Deploy website
on:
  push:
    branches:
      - master
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3

      # Check out cache if its there use cache else run npm install
      # incase we update package-lock.json reapply the cache
      - name: Cached Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm 
          key: deps-${{hashFiles('package.lock.json')}}

      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Test code
        run: npm run test

  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      js_file: ${{steps.publish.outputs.js_file}} # assigning the value from the output of the step
    steps:
      - name: Get code
        uses: actions/checkout@v3
      
      - name: Cached Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm 
          key: deps-${{ hashFiles('package.lock.json') }}

      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
      
      - name: Publish File
        id: publish
        run: echo "js_file=$(find dist/assets/*.js -type f | head -n 1)" >>$GITHUB_OUTPUT # setting the value, persistence

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist

          # path: |
          #   dist
          #   package.json

        ## Build Output  is an input to the deploy job

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
      - name: Output Content
        run: echo "${{needs.build.outputs.js_file}}"

      - name: Deploy
        run: echo "Deploying..."

